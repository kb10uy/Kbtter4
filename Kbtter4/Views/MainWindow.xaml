<Window x:Class="Kbtter4.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:Kbtter4.Views"
        xmlns:vm="clr-namespace:Kbtter4.ViewModels"
        Title="Kbtter4 Polypropylene" Height="700" Width="600">

    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

    </i:Interaction.Triggers>

    <Grid>
        <DockPanel Name="DockPanelMenu" Panel.ZIndex="10" Background="Gray" Width="240" HorizontalAlignment="Left" Margin="-200,0,0,0">
            <Grid VerticalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="64"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="40"/>
                </Grid.ColumnDefinitions>

                <TextBlock Name="TextBlockMenuMenu" TextAlignment="Right" VerticalAlignment="Center"
                           Grid.Column="0" Grid.Row="0" FontSize="24"
                           Foreground="White">メニュー</TextBlock>
                <ToggleButton Name="ButtonMenuMenu" Grid.Column="1" Grid.Row="0" Margin="4">
                    <ToggleButton.Triggers>
                        <EventTrigger RoutedEvent="ToggleButton.Checked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimation Storyboard.TargetName="DockPanelMenu" Storyboard.TargetProperty="Margin"
                                                From="-200,0,0,0" To="0,0,0,0" Duration="0:0:0.150">
                                        <ThicknessAnimation.EasingFunction>
                                            <SineEase EasingMode="EaseOut"/>
                                        </ThicknessAnimation.EasingFunction>
                                    </ThicknessAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimation Storyboard.TargetName="DockPanelMenu" Storyboard.TargetProperty="Margin"
                                                From="0,0,0,0" To="-200,0,0,0" Duration="0:0:0.150">
                                        <ThicknessAnimation.EasingFunction>
                                            <SineEase EasingMode="EaseOut"/>
                                        </ThicknessAnimation.EasingFunction>
                                    </ThicknessAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ToggleButton.Triggers>
                </ToggleButton>

                <TextBlock Name="TextBlockMenuTimeline" TextAlignment="Right" VerticalAlignment="Center"
                           Grid.Column="0" Grid.Row="1" FontSize="24"
                           Foreground="White">タイムライン</TextBlock>
                <Button Name="ButtonMenuTimeline" Grid.Column="1" Grid.Row="1" Margin="4"></Button>

                <TextBlock Name="TextBlockMenuNotification" TextAlignment="Right" VerticalAlignment="Center"
                           Grid.Column="0" Grid.Row="2" FontSize="24"
                           Foreground="White">通知</TextBlock>
                <Button Name="ButtonMenuNotification" Grid.Column="1" Grid.Row="2" Margin="4"></Button>

                <TextBlock Name="TextBlockMenuDirectMessage" TextAlignment="Right" VerticalAlignment="Center"
                           Grid.Column="0" Grid.Row="3" FontSize="19"
                           Foreground="White">ダイレクトメッセージ</TextBlock>
                <Button Name="ButtonMenuDirectMessage" Grid.Column="1" Grid.Row="3" Margin="4"></Button>

                <TextBlock Name="TextBlockMenuSearch" TextAlignment="Right" VerticalAlignment="Center"
                           Grid.Column="0" Grid.Row="4" FontSize="24"
                           Foreground="White">検索</TextBlock>
                <Button Name="ButtonMenuSearch" Grid.Column="1" Grid.Row="4" Margin="4"></Button>

                <TextBlock Name="TextBlockMenuUser" TextAlignment="Right" VerticalAlignment="Center"
                           Grid.Column="0" Grid.Row="5" FontSize="24"
                           Foreground="White">ユーザー</TextBlock>
                <Button Name="ButtonMenuUser" Grid.Column="1" Grid.Row="5" Margin="4"></Button>

                <TextBlock Name="TextBlockMenuUserTimeline" TextAlignment="Right" VerticalAlignment="Center"
                           Grid.Column="0" Grid.Row="6" FontSize="16"
                           Foreground="White">ユーザー定義タイムライン</TextBlock>
                <Button Name="ButtonMenuUserTimeline" Grid.Column="1" Grid.Row="6" Margin="4"></Button>

                <TextBlock Name="TextBlockMenuUserNotification" TextAlignment="Right" VerticalAlignment="Center"
                           Grid.Column="0" Grid.Row="7" FontSize="16"
                           Foreground="White">ユーザー定義通知</TextBlock>
                <Button Name="ButtonMenuUserNotification" Grid.Column="1" Grid.Row="7" Margin="4"></Button>

                <TextBlock Name="TextBlockMenuSetting" TextAlignment="Right" VerticalAlignment="Center"
                           Grid.Column="0" Grid.Row="9" FontSize="24"
                           Foreground="White">設定</TextBlock>
                <Button Name="ButtonMenuSetting" Grid.Column="1" Grid.Row="9" Margin="4"></Button>
            </Grid>
        </DockPanel>
        <Grid Background="White">
            <Grid.Triggers>
                <EventTrigger RoutedEvent="MouseLeftButtonDown">
                    <BeginStoryboard>
                        <Storyboard>
                            <Storyboard>
                                <ThicknessAnimation Storyboard.TargetName="DockPanelMenu" Storyboard.TargetProperty="Margin"
                                                To="-200,0,0,0" Duration="0:0:0.150">
                                    <ThicknessAnimation.EasingFunction>
                                        <SineEase EasingMode="EaseOut"/>
                                    </ThicknessAnimation.EasingFunction>
                                </ThicknessAnimation>
                            </Storyboard>
                            <Storyboard>
                                <BooleanAnimationUsingKeyFrames Storyboard.TargetName="ButtonMenuMenu" Storyboard.TargetProperty="IsChecked">
                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0:0" Value="False"/>
                                </BooleanAnimationUsingKeyFrames>
                            </Storyboard>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Grid.Triggers>
        </Grid>
    </Grid>
</Window>
