<Window x:Class="Kbtter4.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:Kbtter4.Views"
        xmlns:vm="clr-namespace:Kbtter4.ViewModels"
        Title="Kbtter4 Polypropylene" Height="720" Width="640"
        Name="WindowMainWindow">

    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="Close">
            <l:WindowInteractionMessageAction/>
        </l:InteractionMessageTrigger>
        <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="Maximize">
            <l:WindowInteractionMessageAction/>
        </l:InteractionMessageTrigger>
        <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="Minimize">
            <l:WindowInteractionMessageAction/>
        </l:InteractionMessageTrigger>
        <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="Restore">
            <l:WindowInteractionMessageAction/>
        </l:InteractionMessageTrigger>
        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->
        <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="Tegaki">
            <l:TransitionInteractionMessageAction WindowType="{x:Type v:TegakiWindow}"/>
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger Messenger="{Binding ElementName=ListViewUserTimelines,Path=SelectedItem.Messenger}" MessageKey="StatusTimelineEdit">
            <l:TransitionInteractionMessageAction WindowType="{x:Type v:StatusTimelineEditWindow}" Mode="Modal"/>
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="StatusTimelineEdit">
            <l:TransitionInteractionMessageAction WindowType="{x:Type v:StatusTimelineEditWindow}" Mode="Modal"/>
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="DraftWindow">
            <l:TransitionInteractionMessageAction WindowType="{x:Type v:DraftWindow}" Mode="NewOrActive"/>
        </l:InteractionMessageTrigger>
    </i:Interaction.Triggers>

    <Window.Resources>
        <ResourceDictionary Source="Resources.xaml"/>
    </Window.Resources>

    <Grid>
        <ScrollViewer>

        </ScrollViewer>
        <DockPanel Name="DockPanelMenu" Panel.ZIndex="10" Background="{StaticResource TwitterColorDarkGray}" Width="240" HorizontalAlignment="Left" Margin="-200,0,0,0">
            <Grid VerticalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="64"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="40"/>
                </Grid.ColumnDefinitions>

                <Image Name="ImageLogo" Panel.ZIndex="0" Source="/Kbtter4;component/Resources/Kbtter4-270.png" MaxHeight="600"
                       VerticalAlignment="Bottom" HorizontalAlignment="Left" Opacity="0.2" Grid.RowSpan="11"/>


                <TextBlock Name="TextBlockMenuMenu" TextAlignment="Right" VerticalAlignment="Center"
                           Grid.Column="0" Grid.Row="0" FontSize="24"
                           Foreground="White">メニュー</TextBlock>
                <ToggleButton Name="ButtonMenuMenu" Grid.Column="1" Grid.Row="0" Margin="4" Template="{StaticResource ImageToggleButton}">
                    <ToggleButton.RenderTransform>
                        <RotateTransform CenterX="16" CenterY="16" x:Name="ButtonMenuMenuRotate"/>
                    </ToggleButton.RenderTransform>
                    <Image Width="32" Height="32" Source="/Kbtter4;component/Resources/Menu.png"/>
                    <ToggleButton.Triggers>
                        <EventTrigger RoutedEvent="ToggleButton.Checked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="DockPanelMenu" Storyboard.TargetProperty="Margin"
                                                To="0,0,0,0" Duration="0:0:0.50">
                                            <ThicknessAnimation.EasingFunction>
                                                <QuarticEase EasingMode="EaseInOut"/>
                                            </ThicknessAnimation.EasingFunction>
                                        </ThicknessAnimation>
                                    </Storyboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ButtonMenuMenuRotate" Storyboard.TargetProperty="(RotateTransform.Angle)" To="180" Duration="0:0:0.500">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="DockPanelMenu" Storyboard.TargetProperty="Margin"
                                                To="-200,0,0,0" Duration="0:0:0.50">
                                            <ThicknessAnimation.EasingFunction>
                                                <QuarticEase EasingMode="EaseInOut"/>
                                            </ThicknessAnimation.EasingFunction>
                                        </ThicknessAnimation>
                                    </Storyboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ButtonMenuMenuRotate" Storyboard.TargetProperty="(RotateTransform.Angle)" To="0" Duration="0:0:0.500">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                    <Storyboard>
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonMenuLoginUser" Storyboard.TargetProperty="IsChecked">
                                            <DiscreteBooleanKeyFrame KeyTime="0:0:0:0" Value="False"/>
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ToggleButton.Triggers>
                </ToggleButton>

                <TextBlock Name="TextBlockMenuTimeline" TextAlignment="Right" VerticalAlignment="Center"
                                    Grid.Column="0" Grid.Row="1" FontSize="16"
                                    Foreground="White">タイムライン</TextBlock>
                <ToggleButton Name="ButtonMenuTimeline" Grid.Column="1" Grid.Row="1" Margin="4" Template="{StaticResource NonDecorationToggleButton}"
                              IsChecked="{Binding View.IsHomeStatusTimelineVisible}" Command="{Binding View.ChangeToHomeStatusTimelineCommand}">
                    <Image Width="32" Height="32" Source="/Kbtter4;component/Resources/HomeStatusTimeline.png" OverridesDefaultStyle="False"/>
                </ToggleButton>
                <TextBlock  Grid.Column="1" Grid.Row="1" Foreground="Red" TextAlignment="Right"
                            Text="{Binding View.HomeTimeline.UnreadCount}" Panel.ZIndex="1" IsHitTestVisible="False"
                            Visibility="{Binding View.HomeStatusTimelineUnselected,Converter={StaticResource BooleanToVisibilityConverter}}"/>

                <TextBlock Name="TextBlockMenuNotification" TextAlignment="Right" VerticalAlignment="Center"
                                    Grid.Column="0" Grid.Row="2" FontSize="16"
                                    Foreground="White">通知</TextBlock>
                <ToggleButton Name="ButtonMenuNotification" Grid.Column="1" Grid.Row="2" Margin="4" Template="{StaticResource NonDecorationToggleButton}"
                              IsChecked="{Binding View.IsHomeNotificationTimelineVisible}" Command="{Binding View.ChangeToHomeNotificationTimelineCommand}">
                    <Image Width="32" Height="32" Source="/Kbtter4;component/Resources/Notification.png" OverridesDefaultStyle="False"/>
                </ToggleButton>
                <TextBlock  Grid.Column="1" Grid.Row="2" Foreground="Red" TextAlignment="Right"
                            Text="{Binding View.HomeNotification.UnreadCount}" Panel.ZIndex="1" IsHitTestVisible="False"
                            Visibility="{Binding View.HomeNotificationTimelineUnselected,Converter={StaticResource BooleanToVisibilityConverter}}"/>

                <TextBlock Name="TextBlockMenuDirectMessage" TextAlignment="Right" VerticalAlignment="Center"
                                    Grid.Column="0" Grid.Row="3" FontSize="16"
                                    Foreground="White">ダイレクトメッセージ</TextBlock>
                <ToggleButton Name="ButtonMenuDirectMessage" Grid.Column="1" Grid.Row="3" Margin="4" Template="{StaticResource NonDecorationToggleButton}"
                              IsChecked="{Binding View.IsDirectMessageVisible}" Command="{Binding View.ChangeToDirectMessageCommand}">
                    <Image Width="32" Height="32" Source="/Kbtter4;component/Resources/DirectMessage.png" OverridesDefaultStyle="False"/>
                </ToggleButton>

                <TextBlock Name="TextBlockMenuSearch" TextAlignment="Right" VerticalAlignment="Center"
                                    Grid.Column="0" Grid.Row="4" FontSize="16"
                                    Foreground="White">検索</TextBlock>
                <ToggleButton Name="ButtonMenuSearch" Grid.Column="1" Grid.Row="4" Margin="4" Template="{StaticResource NonDecorationToggleButton}"
                              IsChecked="{Binding View.IsSearchVisible}" Command="{Binding View.ChangeToSearchCommand}">
                    <Image Width="32" Height="32" Source="/Kbtter4;component/Resources/Search.png" OverridesDefaultStyle="False"/>
                </ToggleButton>

                <TextBlock Name="TextBlockMenuUser" TextAlignment="Right" VerticalAlignment="Center"
                                    Grid.Column="0" Grid.Row="5" FontSize="16"
                                    Foreground="White">ユーザー</TextBlock>
                <ToggleButton Name="ButtonMenuUser" Grid.Column="1" Grid.Row="5" Margin="4" Template="{StaticResource NonDecorationToggleButton}"
                              IsChecked="{Binding View.IsUserVisible}" Command="{Binding View.ChangeToUserCommand}">
                    <Image Width="32" Height="32" Source="/Kbtter4;component/Resources/User.png" OverridesDefaultStyle="False"/>
                </ToggleButton>

                <TextBlock Name="TextBlockMenuUserTimeline" TextAlignment="Right" VerticalAlignment="Center"
                                    Grid.Column="0" Grid.Row="6" FontSize="16"
                                    Foreground="White">ユーザー定義タイムライン</TextBlock>
                <ToggleButton Name="ButtonMenuUserTimeline" Grid.Column="1" Grid.Row="6" Margin="4" Template="{StaticResource NonDecorationToggleButton}"
                              IsChecked="{Binding View.IsUserStatusTimelineVisible}" Command="{Binding View.ChangeToUserStatusTimelineCommand}">
                    <Image Width="32" Height="32" Source="/Kbtter4;component/Resources/UserStatusTimeline.png" OverridesDefaultStyle="False"/>
                </ToggleButton>
                <!--
                <TextBlock Name="TextBlockMenuUserNotification" TextAlignment="Right" VerticalAlignment="Center"
                                    Grid.Column="0" Grid.Row="7" FontSize="16"
                                    Foreground="White">ユーザー定義通知</TextBlock>
                <ToggleButton Name="ButtonMenuUserNotification" Grid.Column="1" Grid.Row="7" Margin="4" Template="{StaticResource NonDecorationToggleButton}"
                              IsChecked="{Binding View.IsUserNotificationTimelineVisible}" Command="{Binding View.ChangeToUserNotificationTimelineCommand}">
                    <Image Width="32" Height="32" Source="/Kbtter4;component/Resources/UserNotification.png" OverridesDefaultStyle="False"/>
                </ToggleButton>
                -->
                <TextBlock Name="TextBlockMenuCommandline" TextAlignment="Right" VerticalAlignment="Center"
                                    Grid.Column="0" Grid.Row="8" FontSize="16"
                                    Foreground="White">コマンド</TextBlock>
                <ToggleButton Name="ButtonMenuCommandline" Grid.Column="1" Grid.Row="8" Margin="4" Template="{StaticResource NonDecorationToggleButton}"
                              IsChecked="{Binding View.IsCommandlineVisible}" Command="{Binding View.ChangeToCommandlineCommand}">
                    <Image Width="32" Height="32" Source="/Kbtter4;component/Resources/Commandline.png" OverridesDefaultStyle="False"/>
                </ToggleButton>

                <TextBlock Name="TextBlockMenuSetting" TextAlignment="Right" VerticalAlignment="Center"
                                    Grid.Column="0" Grid.Row="10" FontSize="24"
                                    Foreground="White">設定</TextBlock>
                <ToggleButton Name="ButtonMenuSetting" Grid.Column="1" Grid.Row="10" Margin="4" Template="{StaticResource NonDecorationToggleButton}"
                              IsChecked="{Binding View.IsSettingVisible}" Command="{Binding View.ChangeToSettingCommand}">
                    <Image Width="32" Height="32" Source="/Kbtter4;component/Resources/Setting.png" OverridesDefaultStyle="False"/>
                </ToggleButton>

                <StackPanel VerticalAlignment="Center" Grid.Row="11" Margin="4">

                    <TextBlock TextAlignment="Right">
                        <Hyperlink Command="{Binding View.LoginUser.ShowUserInformationCommand}">
                            <TextBlock FontSize="16"
                               Text="{Binding View.LoginUser.Name}" TextAlignment="Right"/>
                            <i:Interaction.Behaviors>
                                <v:HyperlinkMouseOverColorChangeBehavior MouseLeftForeground="{StaticResource TwitterColorLightGrayBlue}"
                                                                         MouseEnteredForeground="Red"/>
                                <v:HyperlinkMouseOverUnderlineBehavior/>
                            </i:Interaction.Behaviors>
                        </Hyperlink>
                    </TextBlock>

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <TextBlock FontSize="14" Foreground="{StaticResource TwitterColorLightBlue}">@</TextBlock>
                        <TextBlock FontSize="14" Foreground="{StaticResource TwitterColorLightBlue}"
                                   Text="{Binding View.LoginUser.ScreenName}" TextAlignment="Right"/>
                        <TextBlock FontSize="14" Foreground="{StaticResource TwitterColorGray}" Margin="8,0,0,0">(</TextBlock>
                        <TextBlock FontSize="14" Foreground="{StaticResource TwitterColorGray}" Text="{Binding View.LoginUser.IdString}"/>
                        <TextBlock FontSize="14" Foreground="{StaticResource TwitterColorGray}">)</TextBlock>
                    </StackPanel>
                </StackPanel>
                <ToggleButton Name="ToggleButtonMenuLoginUser" Grid.Column="1" Grid.Row="11" VerticalAlignment="Center" HorizontalAlignment="Center"
                              Template="{StaticResource ImageToggleButton}" ToolTip="クリックでログイン" 
                              >
                    <Border BorderBrush="{StaticResource TwitterColorWhite}" Background="{StaticResource TwitterColorSecondary}" BorderThickness="2" CornerRadius="3">
                        <Image Name="ImageLoginUser" Width="32" Height="32">
                            <i:Interaction.Behaviors>
                                <v:ImageWebLazyBindBehavior UriSource="{Binding View.LoginUser.ProfileImageUri}"/>
                            </i:Interaction.Behaviors>
                        </Image>
                    </Border>
                    <ToggleButton.Triggers>
                        <EventTrigger RoutedEvent="ToggleButton.Checked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <Storyboard Storyboard.TargetName="GridLogin">
                                        <DoubleAnimation Storyboard.TargetProperty="Height" Duration="0:0:0.5" To="160">
                                            <DoubleAnimation.EasingFunction>
                                                <QuarticEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                    <Storyboard Storyboard.TargetName="ButtonMenuMenu">
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsChecked">
                                            <DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                            <BeginStoryboard>
                                <Storyboard Storyboard.TargetName="GridLogin">
                                    <DoubleAnimation Storyboard.TargetProperty="Height" Duration="0:0:0.5" To="0">
                                        <DoubleAnimation.EasingFunction>
                                            <QuarticEase EasingMode="EaseInOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ToggleButton.Triggers>
                </ToggleButton>


                <Grid Name="GridLogin" Grid.Row="12" Grid.ColumnSpan="2" Background="{StaticResource TwitterColorSecondary}" Height="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Row="0" Grid.ColumnSpan="2" Margin="4" FontSize="20" Foreground="{StaticResource TwitterColorWhite}">アカウント</TextBlock>
                    <ListBox Grid.Row="1" Grid.ColumnSpan="2" Margin="4" ScrollViewer.VerticalScrollBarVisibility="Visible" 
                                 ScrollViewer.CanContentScroll="False"
                             ItemsSource="{Binding View.Accounts}" ItemTemplate="{StaticResource AccountTemplate}"
                             SelectedItem="{Binding SelectedAccount,UpdateSourceTrigger=PropertyChanged}">
                        <ListBox.ContextMenu>
                            <ContextMenu>
                                <MenuItem Command="{Binding LoginCommand}">
                                    <MenuItem.Header>
                                        <TextBlock FontWeight="Bold">ログイン</TextBlock>
                                    </MenuItem.Header>
                                </MenuItem>
                                <MenuItem Header="削除" Command="{Binding RemoveAccountCommand}"/>
                            </ContextMenu>
                        </ListBox.ContextMenu>
                    </ListBox>
                    <Button Margin="4" Grid.Row="2" Grid.Column="1" Command="{Binding LoginCommand}">ログイン</Button>
                    <Button Margin="4" Grid.Row="2">
                        新規登録
                        <i:Interaction.Triggers>
                            <l:RoutedEventTrigger RoutedEvent="Button.Click">
                                <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="StartRegisteringAccount"/>
                            </l:RoutedEventTrigger>
                        </i:Interaction.Triggers>
                    </Button>

                    <Grid Grid.Row="3" Grid.ColumnSpan="2" Visibility="{Binding View.IsNewAccountPanelVisible,Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="64"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Text="{Binding PinCode,UpdateSourceTrigger=PropertyChanged}" Margin="4"/>
                        <Button Command="{Binding RegisterAccountCommand}" Grid.Column="1" Margin="4">登録</Button>
                    </Grid>
                </Grid>
            </Grid>
        </DockPanel>
        <Grid Background="{StaticResource TwitterColorWhite}">
            <Grid.Triggers>
                <EventTrigger RoutedEvent="MouseLeftButtonDown">
                    <BeginStoryboard>
                        <Storyboard>
                            <Storyboard>
                                <ThicknessAnimation Storyboard.TargetName="DockPanelMenu" Storyboard.TargetProperty="Margin"
                                                To="-200,0,0,0" Duration="0:0:0.50">
                                    <ThicknessAnimation.EasingFunction>
                                        <QuarticEase EasingMode="EaseInOut"/>
                                    </ThicknessAnimation.EasingFunction>
                                </ThicknessAnimation>
                            </Storyboard>
                            <Storyboard>
                                <BooleanAnimationUsingKeyFrames Storyboard.TargetName="ButtonMenuMenu" Storyboard.TargetProperty="IsChecked">
                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0:0" Value="False"/>
                                </BooleanAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard>
                                <BooleanAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonMenuLoginUser" Storyboard.TargetProperty="IsChecked">
                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0:0" Value="False"/>
                                </BooleanAnimationUsingKeyFrames>
                            </Storyboard>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Grid.Triggers>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="40"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="40"/>
            </Grid.RowDefinitions>

            <Grid  Background="{StaticResource TwitterColorPrimary}" Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Margin="8,0,0,0" VerticalAlignment="Center" FontSize="10" FontStyle="Oblique">ヘッドライン</TextBlock>
                <StackPanel Grid.Row="1" Orientation="Horizontal">
                    <Image Width="24" Height="24" Margin="2">
                        <i:Interaction.Behaviors>
                            <v:ImageWebLazyBindBehavior UriSource="{Binding View.HeadlineUserImage}"/>
                        </i:Interaction.Behaviors>
                    </Image>
                    <TextBlock Margin="0,0,0,0" VerticalAlignment="Center" FontSize="20" Text="{Binding View.HeadlineText}"/>
                </StackPanel>
            </Grid>

            <Expander Name="ExpanderNewTweet" Grid.Row="1" Grid.Column="1" Header="新しいツイート" IsExpanded="{Binding View.IsStatusCreatorExpanded}">
                <Grid VerticalAlignment="Stretch" MinHeight="120">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" MinWidth="400"/>
                        <ColumnDefinition MaxWidth="240"/>
                    </Grid.ColumnDefinitions>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <StackPanel Height="32" Orientation="Horizontal" Visibility="{Binding IsReplying,Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Button Command="{Binding CancelReplyCommand}" Margin="4">キャンセル</Button>
                            <Image Name="ImageReplyingUser" Width="24" Height="24" Margin="4">
                                <i:Interaction.Behaviors>
                                    <v:ImageWebLazyBindBehavior UriSource="{Binding ReplyingStatus.User.ProfileImageUri}"/>
                                </i:Interaction.Behaviors>
                            </Image>
                            <TextBlock Margin="4" Text="{Binding ReplyingStatus.OnelineText}"/>
                        </StackPanel>
                        <ListBox Grid.Row="1" MaxHeight="80" MinHeight="24" Margin="4" 
                                 Visibility="{Binding HasMedia,Converter={StaticResource BooleanToVisibilityConverter}}"
                                 ItemsSource="{Binding Medias}" SelectedItem="{Binding SelectedMedia}">
                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="{x:Type vm:MainWindowSendingMediaViewModel}">
                                    <TextBlock Text="{Binding Path}"/>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <ListBox.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="削除" Command="{Binding RemoveMediaCommand}"/>
                                </ContextMenu>
                            </ListBox.ContextMenu>
                        </ListBox>
                        <TextBox AcceptsReturn="True" AcceptsTab="True" Margin="4" Grid.Row="2" FontSize="16"
                                 Text="{Binding UpdateStatusText,UpdateSourceTrigger=PropertyChanged}" MinHeight="80">
                            <TextBox.InputBindings>
                                <KeyBinding Key="Enter" Modifiers="Control" Command="{Binding UpdateStatusCommand}"/>
                                <KeyBinding Key="Down" Modifiers="Control" Command="{Binding QuickSendDraftCommand}"/>
                                <KeyBinding Key="Up" Modifiers="Control" Command="{Binding QuickReceiveDraftCommand}"/>
                            </TextBox.InputBindings>
                            <i:Interaction.Behaviors>
                                <v:FileDragDropBehavior ListenerCommand="{Binding MediaDragDropAcceptCommand}"/>
                            </i:Interaction.Behaviors>
                        </TextBox>
                        <StackPanel Grid.Row="3" Orientation="Horizontal">
                            <Button Margin="4" Width="120" Command="{Binding OpenDraftWindowCommand}">下書き</Button>
                            <Button Margin="4" Width="80" Command="{Binding QuickSendDraftCommand}">クイック保存</Button>
                            <Button Margin="4" Width="80" Command="{Binding QuickReceiveDraftCommand}">クイック呼出</Button>
                        </StackPanel>
                    </Grid>

                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <TextBlock VerticalAlignment="Center" Margin="0,0,16,0">残り</TextBlock>
                            <TextBlock VerticalAlignment="Center" FontSize="20" Text="{Binding UpdateStatusTextLength}"/>
                        </StackPanel>
                        <GroupBox Header="画像" Grid.Row="1">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Button Margin="2" Grid.Column="0" Command="{Binding StartTegakiCommand}" ToolTip="絵を書いて投稿できます">TEGAKI</Button>
                                <Button Margin="2" Grid.Column="1" ToolTip="既存の画像を参照します">
                                    参照
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <l:OpenFileDialogInteractionMessageAction>
                                                <l:DirectInteractionMessage CallbackCommand="{Binding AddMediaCommand,Mode=OneWay}">
                                                    <l:OpeningFileSelectionMessage Filter="アップロード可能なファイル(*.jpg;*.png;*.gif)|*.jpg;*.png;*.gif"
                                                                                   Title="アップロードする画像を選択" MultiSelect="True"/>
                                                </l:DirectInteractionMessage>
                                            </l:OpenFileDialogInteractionMessageAction>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                            </Grid>
                        </GroupBox>
                        <Button Grid.Row="2" Grid.Column="1" Margin="4" Command="{Binding UpdateStatusCommand}" ToolTip="ツイートを送信します">ツイート</Button>
                    </Grid>
                </Grid>
            </Expander>

            <Grid Name="GridHomeStatusTimeline" Background="{StaticResource TwitterColorWhite}" Grid.Column="1" Grid.Row="2"
                            Visibility="{Binding ElementName=ButtonMenuTimeline,Path=IsChecked,Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock FontSize="32" Margin="4">タイムライン</TextBlock>
                <ListView ItemTemplate="{StaticResource StatusTemplate}" ItemsSource="{Binding View.HomeTimeline.Statuses}" 
                         Margin="4" Grid.Row="1"
                         Style="{StaticResource SlidingListView}"/>
            </Grid>
            <Grid Name="GridHomeNotificationTimeline" Background="{StaticResource TwitterColorWhite}" Grid.Column="1" Grid.Row="2"
                            Visibility="{Binding ElementName=ButtonMenuNotification,Path=IsChecked,Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock FontSize="32" Margin="4">通知</TextBlock>
                <ListView ItemTemplate="{StaticResource NotificationTemplate}" ItemsSource="{Binding View.HomeNotification.Notificaitons}" 
                          Margin="4" Grid.Row="1"
                          Style="{StaticResource SlidingListView}"/>
            </Grid>
            <Grid Name="GridDirectMessage" Background="{StaticResource TwitterColorWhite}" Grid.Column="1" Grid.Row="2"
                            Visibility="{Binding ElementName=ButtonMenuDirectMessage,Path=IsChecked,Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock FontSize="32" Margin="4">ダイレクトメッセージ</TextBlock>
                <Grid Grid.Row="1" Margin="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="160" MaxWidth="320"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ListView Margin="4" ItemsSource="{Binding View.DirectMessageTimelines,IsAsync=True}" 
                              Name="ListViewDirectMessageTimelines" Style="{StaticResource SlidingListView}"
                              ItemTemplate="{StaticResource DirectMessageTimelineTemplate}"
                              SelectedItem="{Binding SelectedParty,Mode=OneWayToSource,UpdateSourceTrigger=PropertyChanged,IsAsync=True}"/>
                        <TextBox Margin="4" Grid.Row="1" ToolTip="新しくDMを送りたいユーザーのスクリーンネームを入力"
                                 Text="{Binding NewDirectMessagePartyScreenName,UpdateSourceTrigger=PropertyChanged}">
                            <TextBox.InputBindings>
                                <KeyBinding Key="Enter" Command="{Binding AddDirectMessagePartyCommand}"/>
                            </TextBox.InputBindings>
                        </TextBox>
                        <Button Margin="4" Grid.Row="2" Command="{Binding AddDirectMessagePartyCommand}">追加</Button>
                    </Grid>
                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="5*"/>
                            <RowDefinition Height="*" MinHeight="120" MaxHeight="160"/>
                        </Grid.RowDefinitions>
                        <ListView Margin="4" 
                                  ItemsSource="{Binding ElementName=ListViewDirectMessageTimelines, Path=SelectedItem.DirectMessages,IsAsync=True}"
                                  ItemTemplate="{StaticResource DirectMessageTemplate}"
                                  Style="{StaticResource VirtualizingListView}"/>

                        <Grid VerticalAlignment="Stretch" Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition MaxWidth="160"/>
                            </Grid.ColumnDefinitions>
                            <TextBox AcceptsReturn="True" AcceptsTab="True" Margin="4" Grid.Row="2" FontSize="16"
                                     Text="{Binding SendingDirectMessageText,UpdateSourceTrigger=PropertyChanged}" MinHeight="80">
                                <TextBox.InputBindings>
                                    <KeyBinding Key="Enter" Modifiers="Control" Command="{Binding SendDirectMessageCommand}"/>
                                </TextBox.InputBindings>
                            </TextBox>
                            <Grid Grid.Column="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <TextBlock VerticalAlignment="Center" Margin="0,0,16,0">残り</TextBlock>
                                    <TextBlock VerticalAlignment="Center" FontSize="20" Text="{Binding SendingDirectMessageTextLength}"/>
                                </StackPanel>
                                <Button Grid.Row="2" Margin="4" Command="{Binding SendDirectMessageCommand}">送信</Button>
                            </Grid>
                        </Grid>
                    </Grid>

                </Grid>
            </Grid>
            <Grid Name="GridSearch" Background="{StaticResource TwitterColorWhite}" Grid.Column="1" Grid.Row="2"
                            Visibility="{Binding ElementName=ButtonMenuSearch,Path=IsChecked,Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock FontSize="32" Margin="4">検索</TextBlock>
                <TextBox Grid.Row="1" Margin="4" FontSize="16" Text="{Binding View.SearchText,UpdateSourceTrigger=PropertyChanged}"
                         IsEnabled="{Binding IsLogined}">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding View.StartSearchingCommand}"/>
                    </TextBox.InputBindings>
                </TextBox>
                <Grid Grid.Row="2" Margin="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <ListView Margin="4" ItemsSource="{Binding View.SearchResultStatuses}" 
                              HorizontalContentAlignment="Stretch"
                              ItemTemplate="{StaticResource StatusTemplate}"
                              Style="{StaticResource SlidingListView}"
                              IsSynchronizedWithCurrentItem="True"/>
                    <ListView Margin="4" Grid.Column="1" ItemsSource="{Binding View.SearchResultUsers}" 
                              HorizontalContentAlignment="Stretch"
                              ItemTemplate="{StaticResource UserTemplate}"
                              Style="{StaticResource SlidingListView}"
                              IsSynchronizedWithCurrentItem="True"/>
                </Grid>
            </Grid>
            <Grid Name="GridUser" Background="{StaticResource TwitterColorWhite}" Grid.Column="1" Grid.Row="2"
                            Visibility="{Binding ElementName=ButtonMenuUser,Path=IsChecked,Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock FontSize="32" Margin="4">ユーザー</TextBlock>
                <Grid Grid.Row="1" Margin="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="240" MaxWidth="480"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <ListView Margin="4" ItemsSource="{Binding View.Users}" 
                              Name="ListViewUsers" HorizontalContentAlignment="Stretch"
                              ItemTemplate="{StaticResource UserTemplate}"
                              IsSynchronizedWithCurrentItem="True"
                              Style="{StaticResource SlidingListView}"
                              SelectedItem="{Binding SelectedUser,Mode=OneWayToSource}"/>
                    <ScrollViewer Grid.Column="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="96"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <StackPanel Orientation="Horizontal">
                                <Border BorderBrush="White" BorderThickness="4" Height="80" Width="80" Margin="8" CornerRadius="8">
                                    <Image>
                                        <i:Interaction.Behaviors>
                                            <v:ImageWebLazyBindBehavior UriSource="{Binding SelectedUser.ProfileImageUri}"/>
                                        </i:Interaction.Behaviors>
                                    </Image>
                                </Border>
                                <StackPanel VerticalAlignment="Center">
                                    <TextBlock Text="{Binding SelectedUser.Name}" FontSize="28"/>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock FontSize="16">@</TextBlock>
                                        <TextBlock FontSize="16" Text="{Binding SelectedUser.ScreenName}"/>
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>
                            <TextBlock Grid.Row="1" MaxWidth="640" FontSize="18" Margin="4" TextAlignment="Left" HorizontalAlignment="Left"
                                   TextWrapping="Wrap" Text="{Binding SelectedUser.Description}">
                                <!--
                                <i:Interaction.Behaviors>
                                    <v:TextBlockStatusTextBehavior TextElements="{Binding SelectedUser.DescriptionElements}"/>
                                </i:Interaction.Behaviors>
                                -->
                            </TextBlock>
                            <StackPanel Grid.Row="2">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Margin="4" FontSize="16">場所</TextBlock>
                                    <TextBlock Margin="4" FontSize="14" VerticalAlignment="Center" Text="{Binding SelectedUser.Location}"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Margin="4" FontSize="16">URL</TextBlock>
                                    <TextBlock Margin="4" FontSize="14" VerticalAlignment="Center">
                                        <Hyperlink Command="{Binding SelectedUser.OpenUriCommand}">
                                            <TextBlock Text="{Binding SelectedUser.UriString}"/>
                                            <i:Interaction.Behaviors>
                                                <v:HyperlinkMouseOverUnderlineBehavior/>
                                                <v:HyperlinkMouseOverColorChangeBehavior MouseLeftForeground="DarkBlue" MouseEnteredForeground="Red"/>
                                            </i:Interaction.Behaviors>
                                        </Hyperlink>
                                    </TextBlock>
                                </StackPanel>
                            </StackPanel>
                            <StackPanel Grid.Row="3">
                                <TextBlock Foreground="DarkBlue" FontSize="20" TextAlignment="Center" Margin="4" Visibility="{Binding SelectedUser.IsFollowingMe,Converter={StaticResource BooleanToVisibilityConverter}}">フォローされています</TextBlock>
                                <TextBlock Foreground="Red" FontSize="20" TextAlignment="Center" Margin="4" Visibility="{Binding SelectedUser.IsBlockingMe,Converter={StaticResource BooleanToVisibilityConverter}}">ブロックされています</TextBlock>
                            </StackPanel>
                            <WrapPanel ItemWidth="280" Grid.Row="4" HorizontalAlignment="Center">
                                <StackPanel Orientation="Horizontal">
                                    <StackPanel Width="140">
                                        <TextBlock FontSize="18" Margin="4" VerticalAlignment="Center" HorizontalAlignment="Center">ツイート</TextBlock>
                                        <TextBlock Grid.Column="1" FontSize="22" Margin="4" VerticalAlignment="Center" HorizontalAlignment="Center" Text="{Binding SelectedUser.Statuses}"/>
                                    </StackPanel>
                                    <StackPanel Width="140">
                                        <TextBlock FontSize="18" Margin="4" VerticalAlignment="Center" HorizontalAlignment="Center">お気に入り</TextBlock>
                                        <TextBlock Grid.Column="1" FontSize="22" Margin="4" VerticalAlignment="Center" HorizontalAlignment="Center" Text="{Binding SelectedUser.Favorites}"/>
                                    </StackPanel>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <StackPanel Width="140">
                                        <TextBlock FontSize="18" Margin="4" VerticalAlignment="Center" HorizontalAlignment="Center">フォロー</TextBlock>
                                        <TextBlock Grid.Column="1" FontSize="22" Margin="4" VerticalAlignment="Center" HorizontalAlignment="Center" Text="{Binding SelectedUser.Friends}"/>
                                    </StackPanel>
                                    <StackPanel Width="140">
                                        <TextBlock FontSize="18" Margin="4" VerticalAlignment="Center" HorizontalAlignment="Center">フォロワー</TextBlock>
                                        <TextBlock Grid.Column="1" FontSize="22" Margin="4" VerticalAlignment="Center" HorizontalAlignment="Center" Text="{Binding SelectedUser.Followers}"/>
                                    </StackPanel>
                                </StackPanel>
                            </WrapPanel>
                        </Grid>
                    </ScrollViewer>
                </Grid>

            </Grid>
            <Grid Name="GridUserStatusTimeline" Background="{StaticResource TwitterColorWhite}" Grid.Column="1" Grid.Row="2"
                            Visibility="{Binding ElementName=ButtonMenuUserTimeline,Path=IsChecked,Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock FontSize="32" Margin="4">ユーザー定義タイムライン</TextBlock>
                <Grid Grid.Row="1" Margin="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>
                    <ListView Margin="4" ItemsSource="{Binding View.UserDefinitionTimelines,IsAsync=True}"
                              Name="ListViewUserTimelines"
                              Style="{StaticResource SlidingListView}"
                              ItemTemplate="{StaticResource StatusTimelineTemplate}"
                              IsSynchronizedWithCurrentItem="True" ScrollViewer.CanContentScroll="False">
                        <ListView.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="新規" Command="{Binding NewStatusTimelineCommand}"/>
                            </ContextMenu>
                        </ListView.ContextMenu>
                    </ListView>

                    <ListView Margin="4" Grid.Column="1" ItemsSource="{Binding ElementName=ListViewUserTimelines,Path=SelectedItem.Statuses,IsAsync=True}" 
                              HorizontalContentAlignment="Stretch"
                              ItemTemplate="{StaticResource StatusTemplate}"
                              IsSynchronizedWithCurrentItem="True" Style="{StaticResource VirtualizingListView}"/>
                </Grid>
            </Grid>
            <!--
            <Grid Name="GridUserNotificationTimeline" Background="{StaticResource TwitterColorWhite}" Grid.Column="1" Grid.Row="2"
                            Visibility="{Binding ElementName=ButtonMenuUserNotification,Path=IsChecked,Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock FontSize="32" Margin="4">ユーザー定義通知</TextBlock>
            </Grid>
            -->
            <Grid Name="GridCommandline" Background="{StaticResource TwitterColorWhite}" Grid.Column="1" Grid.Row="2"
                            Visibility="{Binding ElementName=ButtonMenuCommandline,Path=IsChecked,Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock FontSize="32" Margin="4">コマンド</TextBlock>
                <TextBox Grid.Row="1" Margin="4" FontSize="16" Text="{Binding View.CommandText,UpdateSourceTrigger=PropertyChanged}">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding View.ExecuteCommandCommand}"/>
                    </TextBox.InputBindings>
                </TextBox>
                <TextBox Grid.Row="2" AcceptsReturn="True" IsReadOnly="True" Margin="4"  Text="{Binding View.CommandResults}"
                         ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.HorizontalScrollBarVisibility="Auto"/>
            </Grid>


            <Grid Name="GridSetting" Background="{StaticResource TwitterColorWhite}" Grid.Column="1" Grid.Row="2"
                   Visibility="{Binding ElementName=ButtonMenuSetting,Path=IsChecked,Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="40"/>
                </Grid.RowDefinitions>
                <TextBlock FontSize="32" Margin="4">設定</TextBlock>
                <TabControl Grid.Row="1" VerticalAlignment="Stretch" Margin="4">
                    <TabItem Header="システム">
                        <StackPanel>
                            <GroupBox Header="フォルダを開く">
                                <StackPanel>
                                    <Button Margin="4" Command="{Binding View.OpenPluginFolderCommand}">プラグインフォルダ</Button>
                                    <Button Margin="4" Command="{Binding View.OpenTegakiFolderCommand}">TEGAKIフォルダ</Button>
                                    <Button Margin="4" Command="{Binding View.OpenSettingFolderCommand}">設定フォルダ</Button>
                                    <Button Margin="4" Command="{Binding View.OpenCacheFolderCommand}">キャッシュフォルダ</Button>
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>
                    </TabItem>
                    <TabItem Header="プラグイン">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="160"/>
                            </Grid.ColumnDefinitions>
                            <ListBox ItemsSource="{Binding View.Plugins}" Margin="4" ItemTemplate="{StaticResource PluginTemplate}"
                                     SelectedItem="{Binding View.SelectedPlugin}"/>
                            <StackPanel Grid.Column="1">
                                <TextBlock Margin="4">選択中のプラグインを呼出</TextBlock>
                                <Button Margin="4" IsEnabled="{Binding View.PluginCallable}" Command="{Binding View.SelectedPlugin.CallInitializeCommand}"
                                        ToolTip="Initialize関数を呼び出します。">Initialize</Button>
                                <Button Margin="4" IsEnabled="{Binding View.PluginCallable}" Command="{Binding View.SelectedPlugin.CallDisposeCommand}"
                                        ToolTip="Dispose関数を呼び出します。">Dispose</Button>
                                <Button Margin="4" IsEnabled="{Binding View.PluginCallable}" Command="{Binding View.SelectedPlugin.CallOnLoginCommand}"
                                        ToolTip="現在のユーザーでOnLogin関数を呼び出します。">OnLogin</Button>
                                <Button Margin="4" IsEnabled="{Binding View.PluginCallable}" Command="{Binding View.SelectedPlugin.CallOnLogoutCommand}"
                                        ToolTip="現在のユーザーでOnLogout関数を呼び出します。">OnLogout</Button>
                                <Button Margin="4" IsEnabled="{Binding View.PluginCallable}" Command="{Binding View.SelectedPlugin.CallStartStreamingCommand}"
                                        ToolTip="OnStartStreaming関数を呼び出します。">OnStartStreaming</Button>
                                <Button Margin="4" IsEnabled="{Binding View.PluginCallable}" Command="{Binding View.SelectedPlugin.CallStopStreamingCommand}"
                                        ToolTip="OnStopStreaming関数を呼び出します。">OnStopStreaming</Button>
                            </StackPanel>
                        </Grid>
                    </TabItem>

                    <TabItem Header="CK/CS">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="200"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="32"/>
                                <RowDefinition Height="32"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Column="0" Grid.Row="0" VerticalAlignment="Center">Consumer Key</TextBlock>
                            <TextBox Grid.Column="1" Grid.Row="0" Margin="4" Text="{Binding View.SettingInstance.Consumer.Key,ValidatesOnExceptions=True,UpdateSourceTrigger=PropertyChanged}"/>

                            <TextBlock Grid.Column="0" Grid.Row="1" VerticalAlignment="Center">Consumer Secret</TextBlock>
                            <TextBox Grid.Column="1" Grid.Row="1" Margin="4" Text="{Binding View.SettingInstance.Consumer.Secret,ValidatesOnExceptions=True,UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>
                    </TabItem>
                    <TabItem Header="タイムライン">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="200"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="32"/>
                                <RowDefinition Height="32"/>
                                <RowDefinition Height="32"/>
                                <RowDefinition Height="32"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Column="0" Grid.Row="0" VerticalAlignment="Center">ツイートタイムライン最大</TextBlock>
                            <TextBox Grid.Column="1" Grid.Row="0" Margin="4" Text="{Binding View.SettingInstance.Timelines.HomeStatusTimelineMax,ValidatesOnExceptions=True,UpdateSourceTrigger=PropertyChanged}"/>

                            <CheckBox Name="SettingTimelineCheckBoxAllowInitialReading" Grid.ColumnSpan="2" Grid.Row="1" Margin="4" IsChecked="{Binding View.SettingInstance.Timelines.AllowHomeStatusTimelineInitialReading}"
                                      VerticalAlignment="Center">タイムラインの初期読み込みを有効にする</CheckBox>

                            <TextBlock Grid.Column="0" Grid.Row="2" VerticalAlignment="Center">ツイートタイムライン初期読み込み</TextBlock>
                            <TextBox Grid.Column="1" Grid.Row="2" Margin="4" Text="{Binding View.SettingInstance.Timelines.HomeStatusTimelineInitialRead,ValidatesOnExceptions=True,UpdateSourceTrigger=PropertyChanged}"
                                     IsEnabled="{Binding ElementName=SettingTimelineCheckBoxAllowInitialReading,Path=IsChecked}"/>

                            <TextBlock Grid.Column="0" Grid.Row="3" VerticalAlignment="Center">通知タイムライン最大</TextBlock>
                            <TextBox Grid.Column="1" Grid.Row="3" Margin="4" Text="{Binding View.SettingInstance.Timelines.HomeNotificationTimelineMax,ValidatesOnExceptions=True,UpdateSourceTrigger=PropertyChanged}"/>

                        </Grid>
                    </TabItem>
                    <TabItem Header="検索">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="200"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="32"/>
                                <RowDefinition Height="32"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Column="0" Grid.Row="0" VerticalAlignment="Center">ツイート最大表示数</TextBlock>
                            <TextBox Grid.Column="1" Grid.Row="0" Margin="4" Text="{Binding View.SettingInstance.Searching.StatusCount,ValidatesOnExceptions=True,UpdateSourceTrigger=PropertyChanged}"/>

                            <TextBlock Grid.Column="0" Grid.Row="1" VerticalAlignment="Center">ユーザー最大表示数</TextBlock>
                            <TextBox Grid.Column="1" Grid.Row="1" Margin="4" Text="{Binding View.SettingInstance.Searching.UserCount,ValidatesOnExceptions=True,UpdateSourceTrigger=PropertyChanged}"/>

                        </Grid>
                    </TabItem>
                    <TabItem Header="下書き">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="200"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="32"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <CheckBox Grid.ColumnSpan="2" Margin="4" IsChecked="{Binding View.SettingInstance.ExternalService.ShindanMakerDirectly}"
                                      VerticalAlignment="Center">返信しようとした時に何か入力されていたら自動的に保存する</CheckBox>
                        </Grid>
                    </TabItem>
                    <TabItem Header="外部サービス連携">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="200"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="32"/>
                                <RowDefinition Height="32"/>
                                <RowDefinition Height="32"/>
                                <RowDefinition Height="32"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <CheckBox Name="SettingExServiceShindanMakerDirectly" Grid.ColumnSpan="2" Grid.Row="1" Margin="4" IsChecked="{Binding View.SettingInstance.ExternalService.ShindanMakerDirectly}"
                                      VerticalAlignment="Center">診断メーカーのURLをクリックした時にKbtter4内で直接取得する</CheckBox>
                            <CheckBox Name="SettingExServiceShindanMakerDirectlyWithTweet" Grid.ColumnSpan="2" Grid.Row="2" Margin="16,0,0,0" IsChecked="{Binding View.SettingInstance.ExternalService.ShindanMakerDirectlyWithTweet}"
                                      IsEnabled="{Binding ElementName=SettingExServiceShindanMakerDirectly,Path=IsChecked}"
                                      VerticalAlignment="Center">その後に自動で結果をツイート</CheckBox>

                        </Grid>
                    </TabItem>
                    <TabItem Header="Kbtter4について">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="200"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Image Source="/Kbtter4;component/Resources/Kbtter4.png" Grid.ColumnSpan="2"/>
                        </Grid>

                    </TabItem>
                </TabControl>
                <Button Margin="4" Grid.Row="4" Command="{Binding View.SaveSettingCommand}">保存</Button>
            </Grid>


            <StackPanel Grid.Row="3" Grid.Column="1" Name="StackPanelPopupNotification">
                <StackPanel.Resources>
                    <Style TargetType="StackPanel">
                        <Setter Property="Background" Value="Transparent"/>
                    </Style>
                </StackPanel.Resources>
                <TextBlock Name="TextBlockPopupNotification" Margin="8,40,4,8" FontSize="20" TextAlignment="Right" HorizontalAlignment="Right"
                           Text="{Binding View.PopupNotificationText,Mode=OneWay,NotifyOnTargetUpdated=True}"
                           TargetUpdated="TextBlockPopupNotification_TargetUpdated">
                    <TextBlock.Resources>
                        <Storyboard Name="StoryboardPopupNotify" x:Key="Storyboard">
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetName="StackPanelPopupNotification"
                                                Storyboard.TargetProperty="Background.Color"
                                                Duration="0:0:2" From="{StaticResource ColorTwitterPrimary}"
                                                To="Transparent" >
                                    <ColorAnimation.EasingFunction>
                                        <SineEase EasingMode="EaseIn"/>
                                    </ColorAnimation.EasingFunction>
                                </ColorAnimation>
                            </Storyboard>
                            <Storyboard>
                                <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="TextBlockPopupNotification"
                                                                  Storyboard.TargetProperty="(TextBlock.Margin)"
                                                                  Duration="0:0:3">
                                    <LinearThicknessKeyFrame Value="8,40,4,8" KeyTime="0:0:0"/>
                                    <EasingThicknessKeyFrame Value="8,4,4,8" KeyTime="0:0:0.500">
                                        <EasingThicknessKeyFrame.EasingFunction>
                                            <ElasticEase Springiness="4" EasingMode="EaseOut"/>
                                        </EasingThicknessKeyFrame.EasingFunction>
                                    </EasingThicknessKeyFrame>
                                    <LinearThicknessKeyFrame Value="8,4,4,8" KeyTime="0:0:2.750"/>
                                    <EasingThicknessKeyFrame Value="8,40,4,8" KeyTime="0:0:3">
                                        <EasingThicknessKeyFrame.EasingFunction>
                                            <SineEase EasingMode="EaseInOut"/>
                                        </EasingThicknessKeyFrame.EasingFunction>
                                    </EasingThicknessKeyFrame>
                                </ThicknessAnimationUsingKeyFrames>
                            </Storyboard>
                        </Storyboard>
                    </TextBlock.Resources>
                </TextBlock>
            </StackPanel>
        </Grid>
    </Grid>
</Window>
