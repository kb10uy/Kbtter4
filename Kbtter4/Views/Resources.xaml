<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:Kbtter4.Views"
        xmlns:vm="clr-namespace:Kbtter4.ViewModels">

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <v:Int32ToShortenNumberStringConverter x:Key="Int32ShortenConverter"/>
    <v:Kbtter4NotificationIconConverter x:Key="NotificationIconConverter"/>
    <v:UriToStringConverter x:Key="UriToStringConverter"/>

    <SolidColorBrush x:Key="BrushMenuBack" Color="#667F7F7F"/>
    <SolidColorBrush x:Key="TwitterColorPrimary" Color="#55acee"/>
    <SolidColorBrush x:Key="TwitterColorSecondary" Color="#292f33"/>
    <SolidColorBrush x:Key="TwitterColorDarkGray" Color="#66757f"/>
    <SolidColorBrush x:Key="TwitterColorGray" Color="#99aab5"/>
    <SolidColorBrush x:Key="TwitterColorLightGrayBlue" Color="#ccd6dd"/>
    <SolidColorBrush x:Key="TwitterColorLightBlue" Color="#e1e8ed"/>
    <SolidColorBrush x:Key="TwitterColorWhite" Color="#f5f8fa"/>

    <Color x:Key="ColorTwitterDarkGray" A="255" R="102" G="117" B="127"/>
    <Color x:Key="ColorTwitterPrimary" A="255" R="85" G="172" B="238"/>

    <LinearGradientBrush x:Key="Kbtter4StatusBackColor" StartPoint="0,0" EndPoint="0,1" Opacity="0.4">
        <GradientStop Offset="0" Color="White"/>
        <GradientStop Offset="1" Color="DarkGray"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="Kbtter4RetweetBackColor" Color="#669FFF72"/>
    <SolidColorBrush x:Key="Kbtter4ReplyBackColor" Color="#66FFBC5A"/>
    <SolidColorBrush x:Key="Kbtter4ErrorColor" Color="#66FF6161"/>

    <SolidColorBrush x:Key="Kbtter4GeneralRed" Color="#20FF4466"/>
    <SolidColorBrush x:Key="Kbtter4GeneralGreen" Color="#2066FF66"/>
    <SolidColorBrush x:Key="Kbtter4GeneralBlue" Color="#206666FF"/>
    <SolidColorBrush x:Key="Kbtter4GeneralYellow" Color="#20FFF74B"/>

    <ControlTemplate TargetType="ToggleButton" x:Key="NonDecorationToggleButton">
        <Grid>
            <ContentPresenter Panel.ZIndex="1"/>
            <Ellipse Panel.ZIndex="0" Name="EllipseSelected" Opacity="0">
                <Ellipse.Fill>
                    <RadialGradientBrush GradientOrigin="0.5,0.75" Center="0.5,0.75" RadiusX="0.5" RadiusY="0.25">
                        <GradientStop Color="DodgerBlue" Offset="0"/>
                        <GradientStop Color="{StaticResource ColorTwitterDarkGray}" Offset="1"/>
                    </RadialGradientBrush>
                </Ellipse.Fill>
            </Ellipse>
            <Ellipse Panel.ZIndex="0" Name="EllipseOver" Opacity="0">
                <Ellipse.Fill>
                    <RadialGradientBrush GradientOrigin="0.5,0.75" Center="0.5,0.75" RadiusX="0.5" RadiusY="0.25">
                        <GradientStop Color="DodgerBlue" Offset="0"/>
                        <GradientStop Color="{StaticResource ColorTwitterDarkGray}" Offset="1"/>
                    </RadialGradientBrush>
                </Ellipse.Fill>
            </Ellipse>
        </Grid>
        <ControlTemplate.Triggers>
            <EventTrigger RoutedEvent="ToggleButton.Checked">
                <BeginStoryboard>
                    <Storyboard Storyboard.TargetName="EllipseSelected" Storyboard.TargetProperty="Opacity">
                        <DoubleAnimation To="1" Duration="0:0:0"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                <BeginStoryboard>
                    <Storyboard Storyboard.TargetName="EllipseSelected" Storyboard.TargetProperty="Opacity">
                        <DoubleAnimation To="0" Duration="0:0:0"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard Storyboard.TargetName="EllipseOver" Storyboard.TargetProperty="Opacity">
                        <DoubleAnimation To="0.4" Duration="0:0:0"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard Storyboard.TargetName="EllipseOver" Storyboard.TargetProperty="Opacity">
                        <DoubleAnimation To="0" Duration="0:0:0"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate TargetType="ToggleButton" x:Key="ImageToggleButton">
        <Grid>
            <ContentPresenter Panel.ZIndex="1"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">

            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="FavoriteToggleButton" TargetType="ToggleButton">
        <Border Name="Main" SnapsToDevicePixels="True">
            <Border.Background>
                <ImageBrush ImageSource="/Kbtter4;component/Resources/icon_favno.png" Stretch="None"/>
            </Border.Background>
            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="Main" Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="/Kbtter4;component/Resources/icon_fav.png" Stretch="None"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="RetweetToggleButton" TargetType="ToggleButton">
        <Border Name="Main" SnapsToDevicePixels="True">
            <Border.Background>
                <ImageBrush ImageSource="/Kbtter4;component/Resources/icon_rtno.png" Stretch="None"/>
            </Border.Background>
            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="Main" Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="/Kbtter4;component/Resources/icon_rt.png" Stretch="None"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Main" Property="Opacity" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="DestroyStatusButton" TargetType="Button">
        <Border Name="Main" SnapsToDevicePixels="True">
            <Border.Background>
                <ImageBrush ImageSource="/Kbtter4;component/Resources/icon_delete.png" Stretch="None"/>
            </Border.Background>
            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="ReplyButton" TargetType="Button">
        <Border Name="Main" SnapsToDevicePixels="True">
            <Border.Background>
                <ImageBrush ImageSource="/Kbtter4;component/Resources/icon_reply.png" Stretch="None"/>
            </Border.Background>
            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
        </Border>
    </ControlTemplate>

    <DataTemplate DataType="{x:Type vm:AccountViewModel}" x:Key="AccountTemplate">
        <StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock FontSize="16">@</TextBlock>
                <TextBlock FontSize="16" Text="{Binding ScreenName}"/>
            </StackPanel>
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:PluginViewModel}" x:Key="PluginTemplate">
        <StackPanel>
            <TextBlock FontSize="14" Text="{Binding Name}"/>
        </StackPanel>
    </DataTemplate>


    <Style x:Key="HorizontalListView" TargetType="{x:Type ListView}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate DataType="{x:Type vm:StatusViewModel}" x:Key="StatusTemplate">
        <Grid Background="{StaticResource Kbtter4StatusBackColor}" HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="56"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid.ContextMenu>
                <ContextMenu>
                    <MenuItem IsCheckable="True" IsChecked="{Binding IsFavorited}" Header="お気に入り"/>
                    <MenuItem IsEnabled="{Binding IsRetweetable}" IsCheckable="True" IsChecked="{Binding IsRetweeted}" Header="リツイート"/>
                    <MenuItem IsEnabled="{Binding IsMyStatus}" Command="{Binding DestroyStatusCommand}" Header="削除"/>
                    <MenuItem Command="{Binding GetExtendedMediaCommand}" Header="画像を追加で取得(1枚だけの場合もあります)"/>
                    <Separator/>
                    <MenuItem Header="返信" Command="{Binding ReplyCommand}"/>
                    <MenuItem>
                        <MenuItem.Header>
                            <TextBlock FontWeight="Bold">情報</TextBlock>
                        </MenuItem.Header>
                        <MenuItem IsEnabled="False">
                            <MenuItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding FavoriteCount}"/>
                                    <TextBlock Text="お気に入り" Margin="4,0,0,0"/>
                                </StackPanel>
                            </MenuItem.Header>
                        </MenuItem>
                        <MenuItem IsEnabled="False">
                            <MenuItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding RetweetCount}"/>
                                    <TextBlock Text="リツイート" Margin="4,0,0,0"/>
                                </StackPanel>
                            </MenuItem.Header>
                        </MenuItem>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="プラグイン" ItemsSource="{Binding AdditionalMenus}">
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="MenuItem">
                                <Setter Property="Header" Value="{Binding Text}"/>
                                <Setter Property="Command" Value="{Binding ExecuteCommand}"/>
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>
                </ContextMenu>
            </Grid.ContextMenu>

            <Rectangle Name="RectangleRetweetBackground" Grid.ColumnSpan="2" 
                   Fill="{StaticResource Kbtter4RetweetBackColor}" Panel.ZIndex="-100" 
                   Visibility="{Binding IsRetweet, Converter={StaticResource BooleanToVisibilityConverter}}"/>

            <Rectangle Grid.ColumnSpan="2" 
                   Fill="{StaticResource Kbtter4ReplyBackColor}" Panel.ZIndex="-100" 
                   Visibility="{Binding IsReplyToMe, Converter={StaticResource BooleanToVisibilityConverter}}"/>

            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="44"/>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="20"/>
                </Grid.RowDefinitions>
                <Image Margin="4" Width="32">
                    <i:Interaction.Behaviors>
                        <v:ImageWebLazyBindBehavior UriSource="{Binding User.ProfileImageUri}"/>
                    </i:Interaction.Behaviors>
                </Image>
                <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="4,2,4,2">
                    <ToggleButton Template="{StaticResource FavoriteToggleButton}" IsChecked="{Binding IsFavorited}"  Width="16" Height="16"
                                  ToolTip="お気に入り"/>
                    <TextBlock Margin="2" FontSize="10" VerticalAlignment="Center" Text="{Binding FavoriteCount,Converter={StaticResource Int32ShortenConverter}}"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Grid.Row="2" Margin="4,2,4,2" Visibility="{Binding IsRetweetable,Converter={StaticResource BooleanToVisibilityConverter}}">
                    <ToggleButton Template="{StaticResource RetweetToggleButton}" IsChecked="{Binding IsRetweeted}" Width="16" Height="16"
                                  ToolTip="リツイート"/>
                    <TextBlock Margin="2" FontSize="10" VerticalAlignment="Center" Text="{Binding RetweetCount,Converter={StaticResource Int32ShortenConverter}}"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Grid.Row="2" Margin="4,2,4,2" Visibility="{Binding IsMyStatus,Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Button Template="{StaticResource DestroyStatusButton}" Width="16" Height="16" Command="{Binding DestroyStatusCommand}" ToolTip="削除"/>
                    <TextBlock Margin="2" FontSize="10" VerticalAlignment="Center">削除</TextBlock>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Grid.Row="3" Margin="4,2,4,2">
                    <Button Template="{StaticResource ReplyButton}" Width="16" Height="16" Command="{Binding ReplyCommand}" ToolTip="返信"/>
                    <TextBlock Margin="2" FontSize="10" VerticalAlignment="Center">返信</TextBlock>
                </StackPanel>
            </Grid>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <StackPanel Orientation="Horizontal">
                    <TextBlock Visibility="{Binding User.IsProtected,Converter={StaticResource BooleanToVisibilityConverter}}" VerticalAlignment="Center" FontSize="14" Foreground="Goldenrod">🔓</TextBlock>
                    <TextBlock Text="{Binding User.Name}" FontFamily="MS UI Gothic" FontWeight="Bold" Margin="4" FontSize="16" Foreground="DarkBlue"/>
                    <TextBlock VerticalAlignment="Center">
                        <Hyperlink Command="{Binding User.ShowUserInformationCommand}">
                            <i:Interaction.Behaviors>
                                <v:HyperlinkMouseOverColorChangeBehavior MouseLeftForeground="DarkBlue" MouseEnteredForeground="Red"/>
                            </i:Interaction.Behaviors>
                            @<TextBlock Text="{Binding User.ScreenName}"/>
                        </Hyperlink>
                    </TextBlock>
                </StackPanel>

                <TextBlock Grid.Row="1" Margin="4,0,4,0" FontSize="14" TextWrapping="Wrap">
                    <i:Interaction.Behaviors>
                        <v:TextBlockStatusTextBehavior TextElements="{Binding TextElements}"/>
                    </i:Interaction.Behaviors>
                </TextBlock>

                <Expander Visibility="{Binding HasMedia,Converter={StaticResource BooleanToVisibilityConverter},Mode=OneWay}" Grid.Row="2"
                          Focusable="False" Header="画像を表示" HorizontalAlignment="Left">
                    <ListView Style="{StaticResource HorizontalListView}" ItemsSource="{Binding Medias}" IsHitTestVisible="False" Background="Transparent">
                        <ListView.ItemTemplate>
                            <DataTemplate DataType="{x:Type vm:StatusMediaViewModel}">
                                <Image Width="400" Height="300">
                                    <i:Interaction.Behaviors>
                                        <v:ImageWebLazyBindBehavior UriSource="{Binding Uri}"/>
                                    </i:Interaction.Behaviors>
                                </Image>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </Expander>

                <StackPanel Grid.Row="3" Margin="4,4,4,0" Orientation="Horizontal">
                    <TextBlock>
                        <Hyperlink Command="{Binding OpenStatusLinkCommand}">
                            <TextBlock Text="{Binding CreatedTimeText}"/>
                            <i:Interaction.Behaviors>
                                <v:HyperlinkMouseOverUnderlineBehavior/>
                                <v:HyperlinkMouseOverColorChangeBehavior MouseEnteredForeground="DarkBlue" MouseLeftForeground="DarkBlue"/>
                            </i:Interaction.Behaviors>
                        </Hyperlink>
                    </TextBlock>
                    <TextBlock Foreground="Gray" Margin="4,0,4,0">via</TextBlock>
                    <TextBlock>
                        <Hyperlink Command="{Binding OpenViaCommand}">
                            <TextBlock Text="{Binding Via}"/>
                            <i:Interaction.Behaviors>
                                <v:HyperlinkMouseOverColorChangeBehavior MouseLeftForeground="Gray" MouseEnteredForeground="DarkBlue"/>
                                <v:HyperlinkMouseOverUnderlineBehavior/>
                            </i:Interaction.Behaviors>
                        </Hyperlink>
                    </TextBlock>
                </StackPanel>

                <StackPanel Grid.Row="4" Visibility="{Binding IsRetweet,Converter={StaticResource BooleanToVisibilityConverter}}"
                            Orientation="Horizontal">
                    <Image Margin="4" Width="24" Height="24">
                        <i:Interaction.Behaviors>
                            <v:ImageWebLazyBindBehavior UriSource="{Binding RetweetingUser.ProfileImageUri}"/>
                        </i:Interaction.Behaviors>
                    </Image>
                    <TextBlock VerticalAlignment="Center" FontSize="12" Foreground="Gray" Margin="4,0,0,0">Retweeted by</TextBlock>
                    <TextBlock VerticalAlignment="Center" Margin="8,0,0,0">
                        <Hyperlink Foreground="Gray" Command="{Binding RetweetingUser.ShowUserInformationCommand}">
                            <TextBlock FontSize="12" Text="{Binding RetweetingUser.Name}"/>
                            <i:Interaction.Behaviors>
                                <v:HyperlinkMouseOverUnderlineBehavior/>
                            </i:Interaction.Behaviors>
                        </Hyperlink>
                    </TextBlock>
                </StackPanel>
            </Grid>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:NotificationViewModel}" x:Key="NotificationTemplate">
        <Grid Background="{StaticResource Kbtter4StatusBackColor}" HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="32"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Image Grid.Column="0" Margin="4" Width="24" Height="24" VerticalAlignment="Top">
                <i:Interaction.Behaviors>
                    <v:ImageWebLazyBindBehavior UriSource="{Binding SourceUser.ProfileImageUri}"/>
                </i:Interaction.Behaviors>
            </Image>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="24"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Image Width="16" Height="16" Margin="4" VerticalAlignment="Center"
                       Source="{Binding IconKind,Converter={StaticResource NotificationIconConverter}}">
                </Image>
                <TextBlock Grid.Column="1" Text="{Binding Message}" FontSize="16"/>
                <TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding Description}" FontSize="12" Foreground="DarkGray"/>
            </Grid>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:DirectMessageTimelineViewModel}" x:Key="DirectMessageTimelineTemplate">
        <StackPanel Orientation="Horizontal" Background="{StaticResource Kbtter4StatusBackColor}" VerticalAlignment="Stretch">
            <Image  Width="48" Height="48" Margin="2">
                <i:Interaction.Behaviors>
                    <v:ImageWebLazyBindBehavior UriSource="{Binding Party.ProfileImageUri}"/>
                </i:Interaction.Behaviors>
            </Image>
            <StackPanel VerticalAlignment="Center">
                <TextBlock FontSize="16" Text="{Binding Party.Name}"/>
                <TextBlock>
                    <TextBlock Text="{Binding Party.ScreenName}"/>
                </TextBlock>
            </StackPanel>
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:UserViewModel}" x:Key="UserTemplate">
        <StackPanel Orientation="Horizontal" Background="{StaticResource Kbtter4StatusBackColor}" VerticalAlignment="Stretch">
            <Image  Width="48" Height="48" Margin="2">
                <i:Interaction.Behaviors>
                    <v:ImageWebLazyBindBehavior UriSource="{Binding ProfileImageUri}"/>
                </i:Interaction.Behaviors>
            </Image>
            <StackPanel VerticalAlignment="Center">
                <TextBlock FontSize="16" Text="{Binding Name}"/>
                <TextBlock>
                    <TextBlock Text="{Binding ScreenName}"/>
                </TextBlock>
            </StackPanel>
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:DirectMessageViewModel}" x:Key="DirectMessageTemplate">
        <StackPanel Margin="8">
            <Border BorderBrush="{StaticResource TwitterColorGray}" BorderThickness="1" CornerRadius="6">
                <Grid>
                    <Grid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Command="{Binding DeleteCommand}" Header="削除(表示に反映されません)"/>
                        </ContextMenu>
                    </Grid.ContextMenu>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="32"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="32"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Rectangle Panel.ZIndex="-100" Fill="{StaticResource Kbtter4GeneralGreen}" Grid.ColumnSpan="2" Grid.RowSpan="2"
                               Visibility="{Binding IsSentByMe,Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <Image Width="24" Height="24" Margin="4">
                        <i:Interaction.Behaviors>
                            <v:ImageWebLazyBindBehavior UriSource="{Binding Sender.ProfileImageUri,IsAsync=True}"/>
                        </i:Interaction.Behaviors>
                    </Image>
                    <TextBlock Grid.Column="1" FontSize="14" Margin="4" VerticalAlignment="Center" Text="{Binding Sender.Name}"/>
                    <StackPanel Grid.Column="1" Grid.Row="1">
                        <TextBlock Grid.Row="1" Margin="4,0,4,0" FontSize="14">
                            <i:Interaction.Behaviors>
                                <v:TextBlockStatusTextBehavior TextElements="{Binding TextElements}"/>
                            </i:Interaction.Behaviors>
                        </TextBlock>

                        <TextBlock Text="{Binding CreatedAt}" Margin="0,0,4,4" 
                                   FontSize="10" Foreground="{StaticResource TwitterColorGray}"/>
                    </StackPanel>
                </Grid>
            </Border>
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:StatusTimelineViewModel}" x:Key="StatusTimelineTemplate">
        <StackPanel Orientation="Horizontal" Background="{StaticResource Kbtter4StatusBackColor}" VerticalAlignment="Stretch">
            <StackPanel VerticalAlignment="Center">
                <TextBlock FontSize="20" Margin="4,0,0,0" Text="{Binding Name}"/>
                <TextBlock FontSize="12" Margin="4,0,0,0" Foreground="Gray" Text="{Binding QueryText}"/>
            </StackPanel>
            <StackPanel.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="編集" Command="{Binding EditCommand}"/>
                    <MenuItem Header="リセット" Command="{Binding DeleteStatusesCommand}"/>
                    <MenuItem Header="削除" Command="{Binding DeleteTimelineCommand}"/>
                </ContextMenu>
            </StackPanel.ContextMenu>
        </StackPanel>
    </DataTemplate>

    <ControlTemplate x:Key="CircleProgress" TargetType="ProgressBar">

    </ControlTemplate>

    <Style x:Key="SlidingListView" TargetType="{x:Type ListView}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="LayoutTransform">
                        <Setter.Value>
                            <ScaleTransform x:Name="Transform" />
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.5" />
                                        <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleY" From="0" Duration="0:0:0.5">
                                            <DoubleAnimation.EasingFunction>
                                                <QuarticEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VirtualizingListView" TargetType="{x:Type ListView}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel"/>
    </Style>

    <Style x:Key="WrappingItemsControl" TargetType="{x:Type ItemsControl}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock FontSize="14" Margin="4" Text="{Binding}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>